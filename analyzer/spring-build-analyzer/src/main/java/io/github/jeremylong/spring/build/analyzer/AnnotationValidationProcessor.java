/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.github.jeremylong.spring.build.analyzer;

import com.squareup.javapoet.ClassName;

import javax.annotation.processing.AbstractProcessor;
import javax.annotation.processing.RoundEnvironment;
import javax.annotation.processing.SupportedAnnotationTypes;
import javax.lang.model.element.Element;
import javax.lang.model.element.ElementKind;
import javax.lang.model.element.TypeElement;
import java.util.Set;
import java.util.concurrent.atomic.AtomicBoolean;

@SupportedAnnotationTypes("org.springframework.boot.autoconfigure.SpringBootApplication")
public class AnnotationValidationProcessor extends AbstractProcessor {

    @Override
    public boolean process(Set<? extends TypeElement> annotations,
                           RoundEnvironment roundEnv) {

        for (TypeElement annotation : annotations) {
            for (Element e : roundEnv.getElementsAnnotatedWith(annotation)) {
                if (e.getKind() == ElementKind.CLASS) {
                    TypeElement typeElement = (TypeElement) e;
                    ClassName className = ClassName.get(typeElement);
                }
            }
        }

        return true;
    }
}
